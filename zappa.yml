---
- hosts: localhost
  connection: local
  gather_facts: no
  tasks:
    - set_fact: time="{{lookup('pipe','date +%Y%m%d%H%M%S')}}"
    - set_fact: root_path="/tmp/intake-{{ time }}"
    - set_fact: venv_path="{{ root_path }}/venv"
    - set_fact: project_path="{{ root_path }}/intake"
    - rds:
        command: facts
        instance_name: "{{ project_slug }}-database"
        region: "{{ region }}"
      register: database

    - name: Create Root Directory
      file:
        path: "{{ root_path }}"
        state: directory

    - name: Create Project Directories
      file:
        path: "{{ project_path }}"
        state: directory

    - name: Download Project
      git:
        repo: 'https://github.com/codeforamerica/intake.git'
        dest: "{{ project_path }}"
        version: feature/zappa_changes

    - name: Install Project requirements
      pip:
        requirements: "{{ project_path }}/requirements/zappa.txt"
        virtualenv: "{{ venv_path }}"
        virtualenv_python: python3.6
      environment:
        PYTHONPATH: "python3.6"

    - name: Install NPM requirements
      shell: "npm install"
      args:
        chdir: "{{ project_path }}"

    - name: Create Zappa Settings File
      template:
        src: templates/zappa_settings.json.j2
        dest: "{{ project_path  }}/zappa_settings.json"

    - name: Running Collectstatic
      shell: "{{ venv_path }}/bin/python ./manage.py collectstatic --no-input --settings project.settings.development"
      args:
        chdir: "{{ project_path }}"
        executable: /bin/bash
      environment:
        PYTHONPATH: "python3.6"
        AWS_ACCESS_KEY_ID: "{{ lookup('env','AWS_ACCESS_KEY_ID') }}"
        AWS_SECRET_ACCESS_KEY: "{{ lookup('env','AWS_SECRET_ACCESS_KEY') }}"
        SECRET_KEY: "{{ secret_key }}"
        TEST_USER_PASSWORD: "{{ test_user_password }}"
        DATABASE_HOST: "{{ database.instance.endpoint }}"
        DATABASE_PASSWORD: "{{ pg_app_password }}"
        PURGED_DATABASE_HOST: "{{ database.instance.endpoint }}"
        PURGED_DATABASE_PASSWORD: "{{ pg_app_password }}"
        AWS_ID: "{{ aws_id }}"
        AWS_SECRET: "{{ aws_secret }}"
        STATIC_BUCKET: "{{ project_slug }}-static-files"
        MEDIA_BUCKET: "{{ project_slug }}-media-files"

    - name: Running Compressor
      shell: "{{ venv_path }}/bin/python ./manage.py compress --engine jinja2 --extension jinja --settings project.settings.development"
      args:
        chdir: "{{ project_path }}"
        executable: /bin/bash
      environment:
        PYTHONPATH: "python3.6"
        AWS_ACCESS_KEY_ID: "{{ lookup('env','AWS_ACCESS_KEY_ID') }}"
        AWS_SECRET_ACCESS_KEY: "{{ lookup('env','AWS_SECRET_ACCESS_KEY') }}"
        SECRET_KEY: "{{ secret_key }}"
        TEST_USER_PASSWORD: "{{ test_user_password }}"
        DATABASE_HOST: "{{ database.instance.endpoint }}"
        DATABASE_PASSWORD: "{{ pg_app_password }}"
        PURGED_DATABASE_HOST: "{{ database.instance.endpoint }}"
        PURGED_DATABASE_PASSWORD: "{{ pg_app_password }}"
        AWS_ID: "{{ aws_id }}"
        AWS_SECRET: "{{ aws_secret }}"
        STATIC_BUCKET: "{{ project_slug }}-static-files"
        MEDIA_BUCKET: "{{ project_slug }}-media-files"


    - name: Update Lambda function
      shell: "source {{ venv_path }}/bin/activate && {{ venv_path }}/bin/zappa update development"
      args:
        chdir: "{{ project_path }}"
        executable: /bin/bash
      environment:
        PYTHONPATH: "python3.6"
        AWS_ACCESS_KEY_ID: "{{ lookup('env','AWS_ACCESS_KEY_ID') }}"
        AWS_SECRET_ACCESS_KEY: "{{ lookup('env','AWS_SECRET_ACCESS_KEY') }}"


    - name: Run Migations
      shell: "source {{ venv_path }}/bin/activate && {{ venv_path }}/bin/zappa manage development migrate"
      args:
        chdir: "{{ project_path }}"
        executable: /bin/bash
      environment:
        PYTHONPATH: "python3.6"
        AWS_ACCESS_KEY_ID: "{{ lookup('env','AWS_ACCESS_KEY_ID') }}"
        AWS_SECRET_ACCESS_KEY: "{{ lookup('env','AWS_SECRET_ACCESS_KEY') }}"
