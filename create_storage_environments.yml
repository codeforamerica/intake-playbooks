---
- hosts: localhost
  connection: local
  gather_facts: no
  tasks:
    - name: create vpc
      ec2_vpc_net:
        state: present
        name: "{{ prefix }}-vpc"
        region: "{{ region }}"
        cidr_block: 10.0.0.0/16
        resource_tags: '{"Name":"{{ prefix }}_vpc"}'
      register: vpc

    - name: Create public subnet
      ec2_vpc_subnet:
        state: present
        vpc_id: "{{ vpc.vpc.id }}"
        region: "{{ region }}"
        az: "{{ az }}"
        cidr: 10.0.0.0/24
        resource_tags: '{"Name": "{{ prefix }}_subnet_public"}'
      register: "subnet_public"

    - name: Create IGW
      ec2_vpc_igw:
        vpc_id: "{{ vpc.vpc.id }}"
        region: "{{ region }}"
        state: present
      register: igw

    - name: Set up public subnet route table
      ec2_vpc_route_table:
        vpc_id: "{{ vpc.vpc.id }}"
        region: "{{ region }}"
        tags:
          Name: "{{ prefix }}_public_route"
        subnets:
          - "{{ subnet_public.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ igw.gateway_id }}"
      register: public_route_table

    - name: "Create and associate production DMZ network ACL with DMZ subnets"
      ec2_vpc_nacl:
        vpc_id: "{{ vpc.vpc.id }}"
        name: "{{ prefix }}-nacl"
        region: "{{ region }}"
        subnets: ["{{ prefix }}_subnet_public"]

        ingress: [
            # rule no, protocol, allow/deny, cidr, icmp_code, icmp_type,
            #                                             port from, port to
            [100, 'tcp', 'allow', '0.0.0.0/0', null, null, 5432, 5432],
            [200, 'icmp', 'allow', '0.0.0.0/0', 0, 8],
        ]
        egress: [
            [100, 'all', 'allow', '0.0.0.0/0', null, null, null, null]
        ]
        state: 'present'

    - name: Create private subnet
      ec2_vpc_subnet:
        state: present
        vpc_id: "{{ vpc.vpc.id }}"
        region: "{{ region }}"
        az: "{{ az }}"
        cidr: 10.0.1.0/24
        resource_tags:
          Name: "{{ prefix }}_subnet_private"
      register: "subnet_private"

    - name: Create private subnet2
      ec2_vpc_subnet:
        state: present
        vpc_id: "{{ vpc.vpc.id }}"
        region: "{{ region }}"
        az: "{{ az2 }}"
        cidr: 10.0.2.0/24
        resource_tags:
          Name: "{{ prefix }}_subnet_private2"
      register: "subnet_private2"

    - name: Create RDS subnet group
      rds_subnet_group:
        region: "{{ region }}"
        state: present
        name: "{{ prefix }}-rds-subnet-group"
        description: "Database subnet for {{ prefix }} instance of {{ project }}"
        subnets:
          - "{{ subnet_public.subnet.id }}"
          - "{{ subnet_private.subnet.id }}"
          - "{{ subnet_private2.subnet.id }}"
      register: "rds_subnet_group"

    - name: Create database security group
      ec2_group:
        name: "{{ prefix }}-rds-security-group"
        description: an example EC2 group
        vpc_id: "{{ vpc.vpc.id }}"
        region: "{{ region }}"
        state: present
        rules:
          - proto: tcp
            from_port: 5432
            to_port: 5432
            cidr_ip: 0.0.0.0/0
      register: "rds_sg"

    - name: Create S3 bucket
      s3_bucket:
        name: "{{ project_slug  }}-{{ prefix }}"
        state: present
        versioning: no

    - name: Create S3 User for Application
      iam:
        iam_type: user
        name: "{{ prefix }}-s3-user"
        state: present
        access_key_state: create

    - name: Create S3 permission for user
      iam_policy:
        policy_name: "{{ prefix }}-s3-policy"
        iam_name: "{{ prefix }}-s3-user"
        iam_type: user
        state: present
        region: "{{ region }}"
        policy_json: >
          {
              "Statement": [
                  {
                      "Action": [
                          "s3:ListBucket"
                      ],
                      "Effect": "Allow",
                      "Resource": [
                          "arn:aws:s3:::{{ project_slug }}-{{ prefix }}"
                      ]
                  },
                  {
                      "Action": [
                          "s3:PutObject",
                          "s3:GetObject",
                          "s3:DeleteObject"
                      ],
                      "Effect": "Allow",
                      "Resource": [
                          "arn:aws:s3:::{{ project_slug }}-{{ prefix }}/*"
                      ]
                  }
              ],
              "Version": "2012-10-17"
          }

    - name: Create database on subnet
      rds:
        command: create
        region: "{{ region }}"
        instance_name: "{{ prefix }}-database"
        region: "{{ region }}"
        subnet: "{{ prefix }}-rds-subnet-group"
        vpc_security_groups: "{{ rds_sg.group_id }}"
        db_engine: postgres
        upgrade: yes
        multi_zone: no
        size: "{{ pg_fs_size }}"
        instance_type: "{{ pg_instance_type }}"
        publicly_accessible: yes
        username: "{{ pg_username }}"
        password: "{{ pg_password }}"
        wait: yes
        wait_timeout: 100000000000000000
      register: "database"


    - name: Create Datbase
      postgresql_db:
        login_host: "{{ database.instance.endpoint }}"
        login_user: "{{ pg_username }}"
        login_password: "{{ pg_password }}"
        name: intake

    - name: Create Application User with DB access
      postgresql_user:
        login_host: "{{ database.instance.endpoint }}"
        login_user: "{{ pg_username }}"
        login_password: "{{ pg_password }}"
        db: intake
        name: "{{ pg_app_username }}"
        password: "{{ pg_app_password }}"
        priv: "CONNECT"
        role_attr_flags: NOSUPERUSER
        no_password_changes: true
