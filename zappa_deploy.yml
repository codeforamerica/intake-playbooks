---
- include: create_storage_environments.yml
- include: includes/pre_zappa.yml
- hosts: localhost
  connection: local
  gather_facts: no
  tasks:
    - name: Check for and then deploy
      block:
        - name: Check for Lambda function(should fail)
          shell: "source {{ venv_path }}/bin/activate && {{ venv_path }}/bin/zappa status -j {{ environment_name }}"
          args:
            chdir: "{{ project_path }}"
            executable: /bin/bash
      rescue:
        - name: Deploy Lambda function
          shell: "source {{ venv_path }}/bin/activate && {{ venv_path }}/bin/zappa deploy {{ environment_name }}"
          args:
            chdir: "{{ project_path }}"
            executable: /bin/bash
      environment:
        PYTHONPATH: "python3.6"
        AWS_ACCESS_KEY_ID: "{{ lookup('env','AWS_ACCESS_KEY_ID') }}"
        AWS_SECRET_ACCESS_KEY: "{{ lookup('env','AWS_SECRET_ACCESS_KEY') }}"

    - name: Set Environment Variables on Lambda function
      command: "aws lambda update-function-configuration  --function-name intake-{{ environment_name }}  --environment '{{ lambda_environment|to_json }}'"
      environment:
        AWS_ACCESS_KEY_ID: "{{ lookup('env','AWS_ACCESS_KEY_ID') }}"
        AWS_SECRET_ACCESS_KEY: "{{ lookup('env','AWS_SECRET_ACCESS_KEY') }}"
      register: s3_user_keys

    - name: Create Certificate and setup Domain
      shell: "source {{ venv_path }}/bin/activate && {{ venv_path }}/bin/zappa certify {{ environment_name }} --yes"
      args:
        chdir: "{{ project_path }}"
        executable: /bin/bash
      environment:
        PYTHONPATH: "python3.6"
        AWS_ACCESS_KEY_ID: "{{ lookup('env','AWS_ACCESS_KEY_ID') }}"
        AWS_SECRET_ACCESS_KEY: "{{ lookup('env','AWS_SECRET_ACCESS_KEY') }}"

- include: includes/post_zappa.yml

